# Nginx Default Virtual Host Template
# Copy to /etc/nginx/sites-available/yoursite.conf
# Enable with: ln -s /etc/nginx/sites-available/yoursite.conf /etc/nginx/sites-enabled/

server {
    listen 80;
    listen [::]:80;

    server_name example.com www.example.com;

    root /var/www/example.com/public;
    index index.php index.html index.htm;

    # Logging
    access_log /var/log/nginx/example.com-access.log;
    error_log /var/log/nginx/example.com-error.log;

    # Security headers
    include snippets/security-headers.conf;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn addr 10;

    # Main location
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP processing (change php83 to your desired version)
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass php83;  # Change to php74, php82, etc.

        # Additional FastCGI parameters
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup and temporary files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to configuration files
    location ~* \.(yml|yaml|ini|conf|log)$ {
        deny all;
    }

    # Static file caching
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Disable logging for favicon and robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
}

# SSL Configuration (uncomment after obtaining SSL certificate)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name example.com www.example.com;
#
#     root /var/www/example.com/public;
#     index index.php index.html index.htm;
#
#     # SSL Certificates
#     ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
#     ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
#
#     # Include all location blocks from above
#     # ... (copy from above)
# }

# HTTP to HTTPS redirect (uncomment after obtaining SSL certificate)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name example.com www.example.com;
#     return 301 https://$server_name$request_uri;
# }
